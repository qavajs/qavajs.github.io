"use strict";(self.webpackChunkqava_docs=self.webpackChunkqava_docs||[]).push([[3976],{7879:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"intro","title":"Getting Started","description":"The qavajs is a modular test automation framework designed to minimize setup time and streamline the development of test scripts. It incorporates the best test automation tools and practices into a single whole. The framework achieves efficiency through its built-in page object engine and ready-to-use sets of domain-agnostic step definitions suitable for both API and UI testing of the web and native mobile applications. Additionally, qavajs provides out of the box integration with ReportPortal, Mobitru, and the Xray and many more.","source":"@site/docs/intro.md","sourceDirName":".","slug":"/intro","permalink":"/docs/intro","draft":false,"unlisted":false,"editUrl":"https://github.com/qavajs/qavajs.github.io/tree/main/docs/intro.md","tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"tutorialSidebar","next":{"title":"Writing tests","permalink":"/docs/writing-tests"}}');var r=n(4848),s=n(8453);const a={sidebar_position:1},o="Getting Started",c={},l=[{value:"\ud83d\udce6 Installation from scratch",id:"-installation-from-scratch",level:3},{value:"\ud83d\udc68\u200d\ud83d\udcbb Test development",id:"-test-development",level:3},{value:"\ud83d\udee0\ufe0f Configuration",id:"\ufe0f-configuration",level:3},{value:"\ud83d\udd2c Test execution",id:"-test-execution",level:3},{value:"\ud83d\udee0\ufe0f Override memory values",id:"\ufe0f-override-memory-values",level:3},{value:"\ud83d\udee0\ufe0f Pass CLI params to workers",id:"\ufe0f-pass-cli-params-to-workers",level:3},{value:"\ud83d\udee0\ufe0f Memory value parameter type",id:"\ufe0f-memory-value-parameter-type",level:3},{value:"\ud83d\udee0\ufe0f Validation parameter type",id:"\ufe0f-validation-parameter-type",level:3},{value:"\ud83d\udee0\ufe0f Test Sharding",id:"\ufe0f-test-sharding",level:3},{value:"\ud83d\udee0\ufe0f Execute steps from other steps",id:"\ufe0f-execute-steps-from-other-steps",level:3},{value:"\ud83d\udee0\ufe0f World",id:"\ufe0f-world",level:3},{value:"\ud83d\udee0\ufe0f Override step definition",id:"\ufe0f-override-step-definition",level:3},{value:"\ud83d\udee0\ufe0f Fixture",id:"\ufe0f-fixture",level:3},{value:"\ud83d\udee0\ufe0f Template",id:"\ufe0f-template",level:3},{value:"\ud83d\udee0\ufe0f Test Execution Hooks",id:"\ufe0f-test-execution-hooks",level:3},{value:"\ud83d\udee0\ufe0f Service",id:"\ufe0f-service",level:3},{value:"\ud83d\udcd8 Extra",id:"-extra",level:3}];function d(e){const t={a:"a",br:"br",code:"code",h1:"h1",h3:"h3",header:"header",p:"p",pre:"pre",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.strong,{children:"qavajs"})," is a modular test automation framework designed to minimize setup time and streamline the development of test scripts. It incorporates the best test automation tools and practices into a single whole. The framework achieves efficiency through its built-in page object engine and ready-to-use sets of domain-agnostic step definitions suitable for both API and UI testing of the web and native mobile applications. Additionally, ",(0,r.jsx)(t.strong,{children:"qavajs"})," provides out of the box integration with ReportPortal, Mobitru, and the Xray and many more."]}),"\n",(0,r.jsxs)(t.p,{children:["Next, you will be shown how to build your own low-code test automation framework with the ",(0,r.jsx)(t.strong,{children:"qavajs"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"-installation-from-scratch",children:"\ud83d\udce6 Installation from scratch"}),"\n",(0,r.jsx)(t.p,{children:"Once you have set up a clear Node.js project, run the command"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:"npm init @qavajs\n"})}),"\n",(0,r.jsx)(t.p,{children:"to launch the CLI application. This will configure qavajs and install the necessary modules for your testing purposes. After the process is completed, a config.ts (or config.js) file will be generated in the project's root directory, which will be used to configure test execution."}),"\n",(0,r.jsx)(t.h3,{id:"-test-development",children:"\ud83d\udc68\u200d\ud83d\udcbb Test development"}),"\n",(0,r.jsxs)(t.p,{children:["As the ",(0,r.jsx)(t.strong,{children:"qavajs"})," based on the Cucumber the test scripts are written in ",(0,r.jsx)(t.a,{href:"https://cucumber.io/docs/gherkin/reference/",children:"Gherkin"})," language of both built-in steps and those you will create yourself.\nWith years of experience across various domains, we have implemented ",(0,r.jsx)(t.a,{href:"https://github.com/orgs/qavajs/repositories?q=steps&type=all",children:"numerous packages"})," of step definitions that you can utilize."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: Wikipedia\n\n  @wikipedia\n  Scenario Outline: Search in wikipedia (<term>)\n    Given I open '$wikipediaUrl' url\n    When I type '<term>' to 'Wikipedia > Search Input'\n    And I click 'Wikipedia > Search Button'\n    And I expect text of 'Wikipedia Article > Title' equals '<term>'\n    And I expect text of 'Wikipedia Article > Title' not to contain 'Python'\n    And I expect 'Wikipedia Article > Title' to be visible\n    And I expect 'Wikipedia Article > Title' to be visible\n\n    Examples:\n      | term       |\n      | JavaScript |\n      | Java       |\n"})}),"\n",(0,r.jsxs)(t.p,{children:["It is worth mentioning the expression ",(0,r.jsx)(t.strong,{children:"'$wikipediaUrl'"})," in the example above starting with '",(0,r.jsx)(t.strong,{children:"$"}),"' interpreted as a ",(0,r.jsx)(t.strong,{children:"qavajs"})," memory variable whose value is taken from the Memory class instance in runtime. ",(0,r.jsx)(t.a,{href:"https://qavajs.github.io/docs/Guides/memory",children:"More details"}),".",(0,r.jsx)(t.br,{}),"\n","Another feature is a locator alias expression like ",(0,r.jsx)(t.strong,{children:"'Wikipedia > Search Input'"})," separated by the '",(0,r.jsx)(t.strong,{children:">"}),"' sign that describes hierarchic page structure. See how ",(0,r.jsx)(t.a,{href:"https://qavajs.github.io/docs/Guides/page-object-v2",children:"to organize your page object"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-configuration",children:"\ud83d\udee0\ufe0f Configuration"}),"\n",(0,r.jsxs)(t.p,{children:["In addition to the default features of Cucumber ",(0,r.jsx)(t.a,{href:"https://github.com/cucumber/cucumber-js/blob/main/docs/configuration.md#options",children:"config file"})," the ",(0,r.jsx)(t.strong,{children:"qavajs"})," config implements following ",(0,r.jsx)(t.a,{href:"https://github.com/qavajs/core/blob/main/src/IQavajsConfig.ts",children:"capabilities"})," to provide the advanced flexibility."]}),"\n",(0,r.jsx)(t.h3,{id:"-test-execution",children:"\ud83d\udd2c Test execution"}),"\n",(0,r.jsxs)(t.p,{children:["If you have the basic config ",(0,r.jsx)(t.code,{children:"npx qavajs"})," will launch test execution.",(0,r.jsx)(t.br,{}),"\n","To specify custom path to the config file use ",(0,r.jsx)(t.code,{children:"npx qavajs run --config <config>"}),".",(0,r.jsx)(t.br,{}),"\n","In case if your config exports an object with multiple properties, you can specify which property to read ",(0,r.jsx)(t.code,{children:"npx qavajs run --profile <profile>"}),"."]}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-override-memory-values",children:"\ud83d\udee0\ufe0f Override memory values"}),"\n",(0,r.jsxs)(t.p,{children:["In case if tests need to be run with updated memory value they can be passed via CLI (e.g run scenarios on some other url)\nIt can be done by passing ",(0,r.jsx)(t.code,{children:"--memory-values"})," parameter which is JSON with params that need to be overridden.\nFor instance, to override ",(0,r.jsx)(t.code,{children:"$url"})," value:"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-bash",children:'npx qavajs run --config config.ts --memory-values \'{"url": "https://github.com"}\'\n'})}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-pass-cli-params-to-workers",children:"\ud83d\udee0\ufe0f Pass CLI params to workers"}),"\n",(0,r.jsxs)(t.p,{children:["All params that you passed to qavajs cli will be available in ",(0,r.jsx)(t.code,{children:"CLI_ARGV"})," environment variable in all child workers."]}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-memory-value-parameter-type",children:"\ud83d\udee0\ufe0f Memory value parameter type"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"value"})," parameter type provides API to access memory"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"When('Read memory {value}', async function(memoryValue) {\n    expect(memoryValue.value()).to.equal('ts');\n});\n\nWhen('Set memory {value} as {string}', async function(memoryKey, value) {\n    memoryKey.set(value);\n});\n"})}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-validation-parameter-type",children:"\ud83d\udee0\ufe0f Validation parameter type"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"validation"})," parameter type provides API to verify values by certain condition"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"When('I expect {string} {validation} {string}', async function(value1, validate, value2) {\n    validate(value1, value2);\n});\n"})}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-test-sharding",children:"\ud83d\udee0\ufe0f Test Sharding"}),"\n",(0,r.jsxs)(t.p,{children:["qavajs provides ability to shard your tests between different machines. To do so pass ",(0,r.jsx)(t.code,{children:"--shard x/y"})," parameter in CLI,\nwhere x - current shard, y - total number of shards."]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"npx qavajs run --config config.js --shard 1/2\nnpx qavajs run --config config.js --shard 2/2\n"})}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-execute-steps-from-other-steps",children:"\ud83d\udee0\ufe0f Execute steps from other steps"}),"\n",(0,r.jsxs)(t.p,{children:["It is possible to implement complex logic using built-in qavajs steps via ",(0,r.jsx)(t.code,{children:"executeStep"})," world method"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"When('I do smth complex', async function() {\n    await this.executeStep(`I type 'username' to 'Username Input'`);\n    await this.executeStep(`I type 'password' to 'Password Input'`);\n    await this.executeStep(`I click 'Login Button'`);\n    await this.executeStep(`I fill following fields`, new DataTable([\n        [ 'Order', '123' ],\n        [ 'Delivery Location', 'New York' ]\n    ]))\n});\n"})}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-world",children:"\ud83d\udee0\ufe0f World"}),"\n",(0,r.jsx)(t.p,{children:"Module extends CucumberJS world with additional entities"}),"\n",(0,r.jsxs)(t.table,{children:[(0,r.jsx)(t.thead,{children:(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.th,{children:"entity"}),(0,r.jsx)(t.th,{children:"type"}),(0,r.jsx)(t.th,{children:"description"}),(0,r.jsx)(t.th,{children:"example"})]})}),(0,r.jsxs)(t.tbody,{children:[(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"config"}),(0,r.jsx)(t.td,{children:"object"}),(0,r.jsx)(t.td,{children:"loaded config"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"this.config.parallel"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"executeStep"}),(0,r.jsx)(t.td,{children:"function"}),(0,r.jsx)(t.td,{children:"programmatically execute certain step definition"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"await this.executeStep(\"I type 'username' to 'Username Input'\");"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"setValue"}),(0,r.jsx)(t.td,{children:"function"}),(0,r.jsx)(t.td,{children:"set memory value"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"await this.setValue('key', 'value');"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"getValue"}),(0,r.jsx)(t.td,{children:"function"}),(0,r.jsx)(t.td,{children:"get memory value or expression"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"await this.getValue('$key');"})})]}),(0,r.jsxs)(t.tr,{children:[(0,r.jsx)(t.td,{children:"validation"}),(0,r.jsx)(t.td,{children:"function"}),(0,r.jsx)(t.td,{children:"get validation function based"}),(0,r.jsx)(t.td,{children:(0,r.jsx)(t.code,{children:"await this.getValue('to equal');"})})]})]})]}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-override-step-definition",children:"\ud83d\udee0\ufe0f Override step definition"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Override"})," function provides capability to override step implementation and avoid ambiguous exception"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { Override } from '@qavajs/core';\n\nWhen('I do test', async function () {});\n\nOverride('I do test', async function () {\n    console.log('I am overridden');\n});\n"})}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-fixture",children:"\ud83d\udee0\ufe0f Fixture"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Fixture"})," provides convenient way to prepare test environment for specific test."]}),"\n",(0,r.jsx)(t.p,{children:"This example will open pdp page before test and clean cart after test"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { Fixture } from '@qavajs/core';\n\nFixture('pdp', async function() {\n    await this.playwright.page.goto('https://my-site/pdp');\n    // fixture may return function that will be executed after test\n    return async function() {\n        await this.playwright.page.request.get('/cleanCart');\n    }\n});\n"})}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: feature with fixture\n\n  @pdp\n  Scenario: scenario with fixture\n    When I click 'qavajs T-shirt'\n    And I click 'cart icon'\n    Then I expect 'qavajs T-shirt cart item' to be visible\n"})}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-template",children:"\ud83d\udee0\ufe0f Template"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"Template"})," provides a way to define step definition using Gherkin language"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { When, Template } from '@qavajs/core';\n\nWhen('I click {string} and verify {string}', Template((locator, expected) => `\n    I click '${locator}'\n    I expect '${locator} > Value' to equal '${expected}'\n`));\n"})}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-test-execution-hooks",children:"\ud83d\udee0\ufe0f Test Execution Hooks"}),"\n",(0,r.jsxs)(t.p,{children:[(0,r.jsx)(t.code,{children:"BeforeExecution"})," and ",(0,r.jsx)(t.code,{children:"AfterExecution"})," allow to define hooks that will be executed\nonce before/after whole test execution"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { BeforeExecution, AfterExecution } from '@qavajs/core';\nimport { Server } from './server';\n\nconst server = new Server();\n\nBeforeExecution(async function () {\n    await server.start();\n});\n\nAfterExecution(async function () {\n    await server.stop();\n});\n"})}),"\n",(0,r.jsx)(t.h3,{id:"\ufe0f-service",children:"\ud83d\udee0\ufe0f Service"}),"\n",(0,r.jsx)(t.p,{children:"Services is an entities that can execute logic before and after whole test run."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import externalService from './externalService';\n\nexport default {\n    service: [\n        {\n            options: {\n                data: 42\n            },\n            before() {\n                console.log(this.options.data);\n            },\n            after(result) {\n                if (!result.success) process.exitCode = 1;\n            }\n        },\n        {\n            options: {\n                data: 42\n            },\n            ...externalService\n        }\n    ]\n}\n"})}),"\n",(0,r.jsx)(t.p,{children:"There is a one minute-long default timeout for a before and after test logic to prevent entire process from freezing.\nTo set up a custom timeout in milliseconds use serviceTimeout property in the config file"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"export default {\n    serviceTimeout: 1_200_000\n}\n"})}),"\n",(0,r.jsx)(t.h3,{id:"-extra",children:"\ud83d\udcd8 Extra"}),"\n",(0,r.jsx)(t.p,{children:(0,r.jsx)(t.a,{href:"https://github.com/qavajs/demo",children:"Code Examples"})})]})}function h(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var i=n(6540);const r={},s=i.createContext(r);function a(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:t},e.children)}}}]);