"use strict";(self.webpackChunkqava_docs=self.webpackChunkqava_docs||[]).push([[7067],{3877:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>o,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"writing-tests","title":"Writing Tests","description":"Introduction","source":"@site/versioned_docs/version-2x/writing-tests.md","sourceDirName":".","slug":"/writing-tests","permalink":"/docs/writing-tests","draft":false,"unlisted":false,"editUrl":"https://github.com/qavajs/qavajs.github.io/tree/main/versioned_docs/version-2x/writing-tests.md","tags":[],"version":"2x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"sidebar","previous":{"title":"Getting Started","permalink":"/docs/intro"},"next":{"title":"What\'s new in v2","permalink":"/docs/v2"}}');var i=t(4848),a=t(8453);const r={sidebar_position:2},c="Writing Tests",o={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Test Structure",id:"test-structure",level:2},{value:"Your First Test",id:"your-first-test",level:2},{value:"Create a Feature File",id:"create-a-feature-file",level:3},{value:"Understanding Gherkin Steps",id:"understanding-gherkin-steps",level:3},{value:"Elements Used in Tests",id:"elements-used-in-tests",level:3},{value:"Common qavajs Steps",id:"common-qavajs-steps",level:2},{value:"Navigation Steps",id:"navigation-steps",level:3},{value:"Interaction Steps",id:"interaction-steps",level:3},{value:"Assertion Steps",id:"assertion-steps",level:3},{value:"Data Steps",id:"data-steps",level:3},{value:"Page Objects",id:"page-objects",level:2},{value:"Constants and Memory Management",id:"constants-and-memory-management",level:2},{value:"Defining Constants",id:"defining-constants",level:3},{value:"Running Tests",id:"running-tests",level:2},{value:"Summary",id:"summary",level:2}];function d(e){const n={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsx)(n.h1,{id:"writing-tests",children:"Writing Tests"})}),"\n",(0,i.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.strong,{children:"qavajs"})," is a powerful testing framework that uses the Gherkin language to create human-readable test scenarios. This approach bridges the gap between technical implementation and business requirements, making tests accessible to both developers and non-technical stakeholders."]}),"\n",(0,i.jsx)(n.h2,{id:"test-structure",children:"Test Structure"}),"\n",(0,i.jsx)(n.p,{children:"qavajs tests follow the Behavior-Driven Development (BDD) approach with:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Features"}),": Collections of related test scenarios"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Scenarios"}),": Individual test cases written in Gherkin syntax"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Steps"}),": Actions and assertions using predefined patterns"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"your-first-test",children:"Your First Test"}),"\n",(0,i.jsx)(n.p,{children:"Let's build a complete test that searches Wikipedia and validates the results:"}),"\n",(0,i.jsx)(n.h3,{id:"create-a-feature-file",children:"Create a Feature File"}),"\n",(0,i.jsxs)(n.p,{children:["Start by creating a feature file in the ",(0,i.jsx)(n.code,{children:"features"})," directory:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"features/wikipedia.feature"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-gherkin",children:"Feature: Wikipedia Search Functionality\n  As a user\n  I want to search for content on Wikipedia\n  So that I can find information quickly\n\n  Scenario: Search for JavaScript documentation\n    Given I open '$wikipedia' url\n    When I type 'JavaScript' to 'Search Input'\n    And I click 'Search Button'\n    Then I expect text of 'Title' equals 'JavaScript'\n    And I expect text of 'Content' contains 'JavaScript is a programming language'\n    \n  Scenario: Search with non-existent term\n    Given I open '$wikipedia' url\n    When I type 'NonExistentTerm123XYZ' to 'Search Input'\n    And I click 'Search Button'\n    Then I expect 'No Results Message' to be visible\n"})}),"\n",(0,i.jsx)(n.h3,{id:"understanding-gherkin-steps",children:"Understanding Gherkin Steps"}),"\n",(0,i.jsx)(n.p,{children:"In the scenarios above:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Given"})," steps set up the initial state (opening a URL)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"When"})," steps perform actions (typing, clicking)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Then"})," steps validate expected outcomes (checking text, visibility)"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"And"})," extends the previous step type"]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"elements-used-in-tests",children:"Elements Used in Tests"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"Search Input"}),", ",(0,i.jsx)(n.code,{children:"Search Button"}),", etc. are ",(0,i.jsx)(n.strong,{children:"page object"})," aliases"]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.code,{children:"$wikipedia"})," is a ",(0,i.jsx)(n.strong,{children:"constant"})," reference to the Wikipedia URL"]}),"\n"]}),"\n",(0,i.jsx)(n.h2,{id:"common-qavajs-steps",children:"Common qavajs Steps"}),"\n",(0,i.jsxs)(n.p,{children:["qavajs provides many predefined steps for different actions\n(check corresponding ",(0,i.jsx)(n.a,{href:"category/steps",children:"step modules"})," to learn more):"]}),"\n",(0,i.jsx)(n.h3,{id:"navigation-steps",children:"Navigation Steps"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-gherkin",children:"Given I open '$wikipedia' url\nWhen I go back\nAnd I refresh page\n"})}),"\n",(0,i.jsx)(n.h3,{id:"interaction-steps",children:"Interaction Steps"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-gherkin",children:"When I click 'Search Button'\nAnd I type 'JavaScript' to 'Search Input'\nAnd I clear 'Search Input'\nAnd I hover over 'Menu Icon'\n"})}),"\n",(0,i.jsx)(n.h3,{id:"assertion-steps",children:"Assertion Steps"}),"\n",(0,i.jsxs)(n.p,{children:["All qavajs modules use same set of ",(0,i.jsx)(n.a,{href:"/docs/Guides/validation",children:"validations"})]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-gherkin",children:"Then I expect 'Search Button' to be visible\nAnd I expect text of 'Title' equals 'JavaScript'\nAnd I expect text of 'Content' contains 'programming language'\nAnd I expect 'Main Image' to be present\n"})}),"\n",(0,i.jsx)(n.h3,{id:"data-steps",children:"Data Steps"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-gherkin",children:"When I save text of 'Title' as 'title'\nWhen I save current url as 'url'\n"})}),"\n",(0,i.jsx)(n.h2,{id:"page-objects",children:"Page Objects"}),"\n",(0,i.jsxs)(n.p,{children:[(0,i.jsx)(n.a,{href:"/docs/Guides/page-object",children:"Page Objects"})," represent UI elements in a structured way, making tests more maintainable."]}),"\n",(0,i.jsxs)(n.p,{children:["Create your page objects in the ",(0,i.jsx)(n.code,{children:"page_object"})," directory:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"page_object/index.ts"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { locator } from '@qavajs/steps-playwright/po';\n\nexport class App {\n    // Search functionality\n    SearchInput = locator('#searchInput');\n    SearchButton = locator('button[type=submit]');\n    \n    // Result page elements\n    Title = locator('#firstHeading');\n    Content = locator('#mw-content-text .mw-parser-output p');\n    NoResultsMessage = locator('.mw-search-nonefound');\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:"You can also organize page objects by component or page:"}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"page_object/wikipedia/searchPage.ts"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { locator } from '@qavajs/steps-playwright/po';\n\nexport class SearchPage {\n    SearchInput = locator('#searchInput');\n    SearchButton = locator('button[type=submit]');\n}\n"})}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"page_object/wikipedia/resultPage.ts"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"import { locator } from '@qavajs/steps-playwright/po';\n\nexport class ResultPage {\n    Title = locator('#firstHeading');\n    Content = locator('#mw-content-text .mw-parser-output p');\n    NoResultsMessage = locator('.mw-search-nonefound');\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"constants-and-memory-management",children:"Constants and Memory Management"}),"\n",(0,i.jsxs)(n.p,{children:["qavajs provides a ",(0,i.jsx)(n.a,{href:"/docs/Guides/memory",children:"Memory"})," system to store and reuse values across tests."]}),"\n",(0,i.jsx)(n.h3,{id:"defining-constants",children:"Defining Constants"}),"\n",(0,i.jsxs)(n.p,{children:["Create a constants file in the ",(0,i.jsx)(n.code,{children:"memory"})," directory:"]}),"\n",(0,i.jsx)(n.p,{children:(0,i.jsx)(n.code,{children:"memory/index.ts"})}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-typescript",children:"export class Constant {\n    // URLs\n    wikipedia = 'https://www.wikipedia.org/';\n    googleSearch = 'https://www.google.com/';\n    \n    // Test data\n    validUsername = 'testuser';\n    validPassword = 'Test@1234';\n}\n"})}),"\n",(0,i.jsx)(n.h2,{id:"running-tests",children:"Running Tests"}),"\n",(0,i.jsx)(n.p,{children:"Execute tests using the qavajs CLI:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:"# Run all tests\nnpx qavajs run\n\n# Run specific feature\nnpx qavajs run --feature features/wikipedia.feature\n\n# Run with specific tags\nnpx qavajs run --tags @smoke\n"})}),"\n",(0,i.jsx)(n.h2,{id:"summary",children:"Summary"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:["The feature file (",(0,i.jsx)(n.code,{children:"wikipedia.feature"}),") outlines the test scenario using Gherkin syntax."]}),"\n",(0,i.jsxs)(n.li,{children:["The page objects (",(0,i.jsx)(n.code,{children:"index.ts"})," in the ",(0,i.jsx)(n.code,{children:"page_object"})," folder) define the locators for the elements used in the test."]}),"\n",(0,i.jsxs)(n.li,{children:["The constants (",(0,i.jsx)(n.code,{children:"index.ts"})," in the ",(0,i.jsx)(n.code,{children:"memory"})," folder) store the URLs or other constants used in the tests"]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(6540);const i={},a=s.createContext(i);function r(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);