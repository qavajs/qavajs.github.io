"use strict";(self.webpackChunkqava_docs=self.webpackChunkqava_docs||[]).push([[998],{8486:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>u,frontMatter:()=>n,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"Guides/wdio-adapter","title":"WDIO Adapter","description":"qavajs framework comes with @qavajs/wdio-service-adapter module that allow to use wdio services e.g selenium-service, appium-service, etc.","source":"@site/versioned_docs/version-2x/Guides/wdio-adapter.md","sourceDirName":"Guides","slug":"/Guides/wdio-adapter","permalink":"/docs/Guides/wdio-adapter","draft":false,"unlisted":false,"editUrl":"https://github.com/qavajs/qavajs.github.io/tree/main/versioned_docs/version-2x/Guides/wdio-adapter.md","tags":[],"version":"2x","sidebarPosition":29,"frontMatter":{"sidebar_position":29},"sidebar":"sidebar","previous":{"title":"Visual Studio Code","permalink":"/docs/Guides/vscode"},"next":{"title":"Webstorm","permalink":"/docs/Guides/webstorm"}}');var t=r(4848),o=r(8453);const n={sidebar_position:29},a="WDIO Adapter",d={},c=[];function p(e){const i={code:"code",h1:"h1",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"wdio-adapter",children:"WDIO Adapter"})}),"\n",(0,t.jsx)(i.p,{children:"qavajs framework comes with @qavajs/wdio-service-adapter module that allow to use wdio services e.g selenium-service, appium-service, etc.\nService defintion may be string with module path or configuration tuple [modulePath, options, capabilities, config"}),"\n",(0,t.jsx)(i.p,{children:"simple use:"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-typescript",children:"// config.ts\nimport wdioService from '@qavajs/wdio-service-adapter';\n\nexport default {\n    service: [\n        wdioService('@wdio/selenium-standalone-service')\n    ],\n}\n"})}),"\n",(0,t.jsx)(i.p,{children:"use with params"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{className:"language-typescript",children:"import wdioService from '@qavajs/wdio-service-adapter';\n\nexport default {\n    service: [\n        wdioService([\n            '@wdio/appium-service',\n            {\n                args: {\n                    chromedriverExecutable: resolve('node_modules/chromedriver/lib/chromedriver/chromedriver.exe')\n                }\n            }\n        ])\n    ]\n}\n"})})]})}function u(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},8453:(e,i,r)=>{r.d(i,{R:()=>n,x:()=>a});var s=r(6540);const t={},o=s.createContext(t);function n(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),s.createElement(o.Provider,{value:i},e.children)}}}]);