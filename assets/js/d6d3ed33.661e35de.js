"use strict";(self.webpackChunkqava_docs=self.webpackChunkqava_docs||[]).push([[4631],{8571:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>p});const a=JSON.parse('{"id":"Guides/page-object","title":"Page Object Model","description":"Introduction","source":"@site/versioned_docs/version-2x/Guides/page-object.mdx","sourceDirName":"Guides","slug":"/Guides/page-object","permalink":"/docs/Guides/page-object","draft":false,"unlisted":false,"editUrl":"https://github.com/qavajs/qavajs.github.io/tree/main/versioned_docs/version-2x/Guides/page-object.mdx","tags":[],"version":"2x","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"sidebar","previous":{"title":"Test Data Management","permalink":"/docs/Guides/memory"},"next":{"title":"Composing Steps","permalink":"/docs/Guides/composing-steps"}}');var r=n(4848),o=n(8453),i=n(1470),l=n(9365);const s={sidebar_position:2},c="Page Object Model",d={},p=[{value:"Introduction",id:"introduction",level:2},{value:"Key Benefits",id:"key-benefits",level:2},{value:"Getting Started with Page Objects",id:"getting-started-with-page-objects",level:2},{value:"Basic Setup",id:"basic-setup",level:3},{value:"Creating Page Objects",id:"creating-page-objects",level:3},{value:"Using Page Objects in Feature Files",id:"using-page-objects-in-feature-files",level:3},{value:"Advanced Locator Types",id:"advanced-locator-types",level:2},{value:"Template Locators",id:"template-locators",level:3},{value:"Native Framework Locators",id:"native-framework-locators",level:3},{value:"Playwright Example:",id:"playwright-example",level:4},{value:"WebdriverIO Example:",id:"webdriverio-example",level:4},{value:"Default Resolver",id:"default-resolver",level:3},{value:"Collections and Indexed Elements",id:"collections-and-indexed-elements",level:2},{value:"Working with Collections",id:"working-with-collections",level:3},{value:"Native Collection Handling",id:"native-collection-handling",level:3},{value:"Using Page Objects in Custom Steps",id:"using-page-objects-in-custom-steps",level:2},{value:"Combining with Memory Variables",id:"combining-with-memory-variables",level:2},{value:"Best Practices",id:"best-practices",level:2},{value:"Organization",id:"organization",level:3},{value:"Selector Strategy",id:"selector-strategy",level:3},{value:"Maintainability",id:"maintainability",level:3},{value:"Complete Example",id:"complete-example",level:2}];function u(e){const t={code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",header:"header",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"page-object-model",children:"Page Object Model"})}),"\n",(0,r.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,r.jsx)(t.p,{children:"The Page Object Model (POM) is a design pattern that creates an object repository for web UI elements.\nqavajs provides a flexible implementation that allows you to define elements using plain English selectors, creating maintainable and readable test automation code."}),"\n",(0,r.jsx)(t.h2,{id:"key-benefits",children:"Key Benefits"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Abstraction of UI elements"})," - Separate test logic from element selectors"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Reusable components"})," - Define element once, use it throughout your tests"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Improved maintainability"})," - When the UI changes, update only the page object, not test cases"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Enhanced readability"})," - Use descriptive names for elements in your test scenarios"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"getting-started-with-page-objects",children:"Getting Started with Page Objects"}),"\n",(0,r.jsx)(t.h3,{id:"basic-setup",children:"Basic Setup"}),"\n",(0,r.jsx)(t.p,{children:"First, configure the page object in your qavajs configuration file:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import App from 'page_object';\n\nexport default {\n  // Other configuration\n  pageObject: new App();\n};\n"})}),"\n",(0,r.jsx)(t.h3,{id:"creating-page-objects",children:"Creating Page Objects"}),"\n",(0,r.jsxs)(t.p,{children:["The entry point of your page object structure is the class defined in the ",(0,r.jsx)(t.code,{children:"pageObject.pages"})," property of your config."]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"js",label:"JavaScript",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"const { locator } = require('@qavajs/steps-playwright/po'); // Use '@qavajs/steps-wdio/po' for WebdriverIO\n\nclass App {\n    // Simple CSS selector\n    SimpleLocator = locator('.single-element');\n    \n    // XPath selector\n    XPathElement = locator('xpath=//div[@class='example']');\n    \n    // Nested component\n    Header = locator('.header-container').as(HeaderComponent);\n    \n    // Component with multiple instances\n    ProductCards = locator('.product-card').as(ProductCard);\n}\n\nclass HeaderComponent {\n    Logo = locator('.logo');\n    SearchBar = locator('input.search');\n    UserMenu = locator('.user-menu');\n}\n\nclass ProductCard {\n    Title = locator('.product-title');\n    Price = locator('.product-price');\n    AddToCartButton = locator('button.add-to-cart');\n}\n\nmodule.exports = App;\n"})})}),(0,r.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { locator } from '@qavajs/steps-playwright/po'; // Use '@qavajs/steps-wdio/po' for WebdriverIO\n\nclass App {\n    // Simple CSS selector\n    SimpleLocator = locator('.single-element');\n    \n    // XPath selector\n    XPathElement = locator('xpath=//div[@class='example']');\n    \n    // Nested component\n    Header = locator('.header-container').as(HeaderComponent);\n    \n    // Component with multiple instances\n    ProductCards = locator('.product-card').as(ProductCard);\n}\n\nclass HeaderComponent {\n    Logo = locator('.logo');\n    SearchBar = locator('input.search');\n    UserMenu = locator('.user-menu');\n}\n\nclass ProductCard {\n    Title = locator('.product-title');\n    Price = locator('.product-price');\n    AddToCartButton = locator('button.add-to-cart');\n}\n\nexport default App;\n"})})})]}),"\n",(0,r.jsx)(t.h3,{id:"using-page-objects-in-feature-files",children:"Using Page Objects in Feature Files"}),"\n",(0,r.jsx)(t.p,{children:"Once defined, page objects can be referenced in Gherkin scenarios using plain English:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: Page Object Demo\n\n  Scenario: Basic element interactions\n    Given I open 'https://example.com' url\n    When I click 'Simple Locator'\n    And I click 'Header > Logo'\n    And I type 'search term' to 'Header > Search Bar'\n    Then I expect 'Header > User Menu' to be visible\n    \n  Scenario: Working with component collections\n    Given I open 'https://example.com/products' url\n    When I click 'Product Cards > Add To Cart Button (2)' \n    # This clicks the Add To Cart button on the second Product Card\n    Then I expect text of 'Cart Items Count' to contain '1'\n"})}),"\n",(0,r.jsx)(t.h2,{id:"advanced-locator-types",children:"Advanced Locator Types"}),"\n",(0,r.jsx)(t.p,{children:"qavajs provides several powerful ways to define and interact with elements:"}),"\n",(0,r.jsx)(t.h3,{id:"template-locators",children:"Template Locators"}),"\n",(0,r.jsx)(t.p,{children:"Template locators allow you to generate selectors dynamically based on parameters passed from your Gherkin steps."}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"js",label:"JavaScript",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"const { locator } = require('@qavajs/steps-playwright/po');\n\nclass App {\n    // Select by index (1-based in Gherkin, converted to 0-based in implementation)\n    ElementByIndex = locator.template(index => `div.item:nth-child(${index})`);\n    \n    // Select by text content\n    ElementByText = locator.template(text => `div:has-text('${text}')`);\n    \n    // Select by attribute value\n    ElementByAttribute = locator.template(value => `[data-testid='${value}']`);\n    \n    // Multiple parameters\n    TableCell = locator.template((row, col) => `table tr:nth-child(${row}) td:nth-child(${col})`);\n}\n"})})}),(0,r.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { locator } from '@qavajs/steps-playwright/po';\n\nclass App {\n    // Select by index (1-based in Gherkin, converted to 0-based in implementation)\n    ElementByIndex = locator.template((index: number) => `div.item:nth-child(${index})`);\n    \n    // Select by text content\n    ElementByText = locator.template((text: string) => `div:has-text('${text}')`);\n    \n    // Select by attribute value\n    ElementByAttribute = locator.template((value: string) => `[data-testid='${value}']`);\n}\n"})})})]}),"\n",(0,r.jsx)(t.p,{children:"Using template locators in feature files:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: Template Locators\n\n  Scenario: Using different template locators\n    When I click 'Element By Index (3)'\n    And I click 'Element By Text (Add to Cart)'\n    And I click 'Element By Attribute (submit-button)'\n    And I expect text of 'Element By Text (Add to Cart)' to contain 'Add to Cart'\n"})}),"\n",(0,r.jsx)(t.h3,{id:"native-framework-locators",children:"Native Framework Locators"}),"\n",(0,r.jsx)(t.p,{children:"Native locators allow you to leverage the full power of your testing framework's built-in selector capabilities."}),"\n",(0,r.jsx)(t.h4,{id:"playwright-example",children:"Playwright Example:"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"js",label:"JavaScript",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"const { locator } = require('@qavajs/steps-playwright/po');\n\nclass App {\n    // Using Playwright's getByRole\n    SubmitButton = locator.native(({ page }) => page.getByRole('button', { name: 'Submit' }));\n    \n    // Using Playwright's getByText with regex\n    SpecialOffer = locator.native(({ page }) => page.getByText(/Special offer/i));\n    \n    // Using Playwright's getByTestId\n    UserProfile = locator.native(({ page }) => page.getByTestId('user-profile'));\n    \n    // Combining with Playwright's filters\n    ActiveMenuItem = locator.native(({ page }) => \n        page.getByRole('menuitem').filter({ hasText: 'Active' }));\n        \n    // Using the argument from feature file\n    DynamicElement = locator.native(({ page, argument }) => \n        page.getByRole('button', { name: argument }));\n\n    // Element in iframe\n    ElementInIframe = locator.native(({ page }) => page.frameLocator('iframe#yourIframe').locator('#element'));\n}\n"})})}),(0,r.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { locator } from '@qavajs/steps-playwright/po';\nimport { Page } from '@playwright/test';\n\nclass App {\n    // Using Playwright's getByRole\n    SubmitButton = locator.native(({ page }: { page: Page }) =>\n        page.getByRole('button', { name: 'Submit' }));\n    \n    // Using Playwright's getByText with regex\n    SpecialOffer = locator.native(({ page }: { page: Page }) => \n        page.getByText(/Special offer/i));\n    \n    // Using Playwright's getByTestId\n    UserProfile = locator.native(({ page }: { page: Page }) => \n        page.getByTestId('user-profile'));\n    \n    // Combining with Playwright's filters\n    ActiveMenuItem = locator.native(({ page }: { page: Page }) => \n        page.getByRole('menuitem').filter({ hasText: 'Active' }));\n        \n    // Using the argument from feature file\n    DynamicElement = locator.native(({ page, argument }: { page: Page, argument: string }) => \n        page.getByRole('button', { name: argument }));\n\n    // Element in iframe\n    ElementInIframe = locator.native(({ page }: { page: Page }) => page.frameLocator('iframe#yourIframe').locator('#element'));\n}\n"})})})]}),"\n",(0,r.jsx)(t.h4,{id:"webdriverio-example",children:"WebdriverIO Example:"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"js",label:"JavaScript",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"const { locator } = require('@qavajs/steps-wdio/po');\n\nclass App {\n    // Using WebdriverIO's custom selectors\n    SubmitButton = locator.native(({ browser }) => \n        browser.$('button=Submit'));\n    \n    // Using WebdriverIO's shadow DOM support\n    ShadowDomElement = locator.native(({ browser }) => \n        browser.$('host-element').shadow$('.shadow-child'));\n    \n    // Using WebdriverIO's recursive find\n    NestedElement = locator.native(({ browser, argument }) => \n        browser.$$('div.container')[Number(argument) - 1].$('.child-element'));\n}\n"})})}),(0,r.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { locator } from '@qavajs/steps-wdio/po';\nimport { Browser } from 'webdriverio';\n\nclass App {\n    // Using WebdriverIO's custom selectors\n    SubmitButton = locator.native(({ browser }: { browser: Browser }) => \n        browser.$('button=Submit'));\n    \n    // Using WebdriverIO's shadow DOM support\n    ShadowDomElement = locator.native(({ browser }: { browser: Browser }) => \n        browser.$('host-element').shadow$('.shadow-child'));\n    \n    // Using WebdriverIO's recursive find\n    NestedElement = locator.native(({ browser, argument }: { browser: Browser, argument: string }) => \n        browser.$$('div.container')[Number(argument) - 1].$('.child-element'));\n}\n"})})})]}),"\n",(0,r.jsx)(t.p,{children:"Using native locators in feature files:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: Native Locators\n\n  Scenario: Use native locators\n    When I click 'Submit Button'\n    And I expect 'Special Offer' to be visible\n    When I click 'Dynamic Element (Accept Terms)'\n"})}),"\n",(0,r.jsx)(t.h3,{id:"default-resolver",children:"Default Resolver"}),"\n",(0,r.jsxs)(t.p,{children:["The ",(0,r.jsx)(t.code,{children:"defaultResolver"})," provides a way to define default logic for identifying elements that aren't explicitly defined in your page object.\nThis is useful for components with many similar elements."]}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"js",label:"JavaScript",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"const { locator } = require('@qavajs/steps-playwright/po');\n\nclass ListComponent {\n  // Define locators for specific elements\n  AddButton = locator('.add-btn');\n  \n  // Default resolver for undefined elements - will find by text\n  defaultResolver({ alias }) {\n    return ({ parent }) => parent.getByText(alias);\n  }\n}\n\nclass App {\n  List = locator('.list-component').as(ListComponent);\n}\n"})})}),(0,r.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { locator } from '@qavajs/steps-playwright/po';\nimport { Locator } from '@playwright/test';\n\nclass ListComponent {\n  // Define locators for specific elements\n  AddButton = locator('.add-btn');\n  \n  // Default resolver for undefined elements - will find by text\n  defaultResolver({ alias }: { alias: string }) {\n    return ({ parent }: { parent: Locator }) => parent.getByText(alias);\n  }\n}\n\nclass App {\n  List = locator('.list-component').as(ListComponent);\n}\n"})})})]}),"\n",(0,r.jsx)(t.p,{children:"Using default resolver in feature files:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: Default Resolver\n\n  Scenario: Using the default resolver to find elements by text\n    # Uses the specific defined locator\n    When I click 'List > Add Button'\n    \n    # These use the default resolver to find elements by their text\n    And I click 'List > Edit Item'\n    And I click 'List > Delete'\n    And I expect 'List > No items found' to be visible\n"})}),"\n",(0,r.jsx)(t.h2,{id:"collections-and-indexed-elements",children:"Collections and Indexed Elements"}),"\n",(0,r.jsx)(t.p,{children:"qavajs provides powerful ways to work with collections of elements:"}),"\n",(0,r.jsx)(t.h3,{id:"working-with-collections",children:"Working with Collections"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"js",label:"JavaScript",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"const { locator } = require('@qavajs/steps-playwright/po');\n\nclass App {\n  // Items in a list\n  ListItems = locator.template(index => `ul.list li:nth-child(${index})`);\n  \n  // Rows in a table (with 1-based indexing)\n  TableRows = locator.template(index => `table tr:nth-child(${parseInt(index) + 1})`);\n  \n  // Elements by text content\n  ElementByText = locator.template(text => `div:has-text('${text}')`);\n  \n  // Get element by partial text match\n  ElementByPartialText = locator.template(text => `xpath=//div[contains(text(), '${text}')]`);\n  \n  // Get element by multiple criteria (index and category)\n  CategoryItem = locator.template((category, index) => \n    `div.${category}-list div.item:nth-child(${index})`);\n}\n"})})}),(0,r.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { locator } from '@qavajs/steps-playwright/po';\n\nclass App {\n  // Items in a list\n  ListItems = locator.template((index: number) => `ul.list li:nth-child(${index})`);\n  \n  // Rows in a table (with 1-based indexing)\n  TableRows = locator.template((index: string) => `table tr:nth-child(${parseInt(index) + 1})`);\n  \n  // Elements by text content\n  ElementByText = locator.template((text: string) => `div:has-text('${text}')`);\n  \n  // Get element by partial text match\n  ElementByPartialText = locator.template((text: string) => `xpath=//div[contains(text(), '${text}')]`);\n}\n"})})})]}),"\n",(0,r.jsx)(t.p,{children:"Usage in feature files:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: Collection Elements\n\n  Scenario: Interacting with collection elements\n    # Using index-based access\n    When I click 'List Items (3)'\n    And I expect text of 'Table Rows (2)' to contain 'Product Details'\n    \n    # Using text-based access\n    When I click 'Element By Text (View Details)'\n    \n    # Using partial text matching\n    When I click 'Element By Partial Text (Add)'\n"})}),"\n",(0,r.jsx)(t.h3,{id:"native-collection-handling",children:"Native Collection Handling"}),"\n",(0,r.jsx)(t.p,{children:"Using the native locator approach for more complex collection operations:"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"js",label:"JavaScript",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"const { locator } = require('@qavajs/steps-playwright/po');\n\nclass App {\n  // Find nth item with specific text\n  ItemWithText = locator.native(({ page, argument }) => {\n    return page.getByText(argument);\n  });\n  \n  // Find element by attribute value and index\n  DataItems = locator.native(({ page, argument }) => {\n    return page.locator(`[data-test='${argument}']`);\n  });\n  \n  // Filter collection and get specific item\n  FilteredItems = locator.native(({ page, argument }) => {\n    return page.locator('li.item')\n      .filter({ hasText: argument })\n      .nth(idx);\n  });\n}\n"})})}),(0,r.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { locator } from '@qavajs/steps-playwright/po';\nimport { Page } from '@playwright/test';\n\nclass App {\n  // Find nth item with specific text\n  ItemWithText = locator.native(({ page, argument }: { page: Page, argument: string }) => {\n    return page.getByText(argument);\n  });\n  \n  // Find element by attribute value and index\n  DataItems = locator.native(({ page, argument }: { page: Page, argument: string }) => {\n    return page.locator(`[data-test='${argument}']`);\n  });\n  \n  // Filter collection and get specific item\n  FilteredItems = locator.native(({ page, argument }: { page: Page, argument: string }) => {\n    return page.locator('li.item')\n      .filter({ hasText: argument })\n      .nth(idx);\n  });\n}\n"})})})]}),"\n",(0,r.jsx)(t.p,{children:"Usage in feature files:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: Advanced Collection Handling\n\n  Scenario: Working with filtered collections\n    When I click 'Item With Text (Product)'\n    And I expect 'Data Items (user-card)' to be visible\n    And I click 'Filtered Items (Premium)'\n"})}),"\n",(0,r.jsx)(t.h2,{id:"using-page-objects-in-custom-steps",children:"Using Page Objects in Custom Steps"}),"\n",(0,r.jsx)(t.p,{children:"You can use page objects in your custom step definitions for more advanced interactions:"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"js",label:"JavaScript",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"const { When, Then } = require('@qavajs/core');\nconst { memory } = require('@qavajs/memory');\n\n// For Playwright\nWhen('I hover over {playwrightLocator} and click {playwrightLocator}', async function(hoverElement, clickElement) {\n    await hoverElement.hover();\n    await clickElement.click();\n});\n\nThen('I store text from {playwrightLocator} as {string}', async function(element, variableName) {\n    const text = await element.innerText();\n    memory.setValue(variableName, text);\n});\n\n// For WebdriverIO\nWhen('I hover over {wdioLocator} and click {wdioLocator}', async function(hoverElement, clickElement) {\n    await hoverElement().moveTo();\n    await clickElement().click();\n});\n\nThen('I store text from {wdioLocator} as {string}', async function(element, variableName) {\n    const text = await element().getText();\n    memory.setValue(variableName, text);\n});\n"})})}),(0,r.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"import { When, Then } from '@qavajs/core';\nimport { memory } from '@qavajs/memory';\nimport { Locator } from '@playwright/test';\nimport { ChainablePromiseElement } from 'webdriverio';\n\n// For Playwright\nWhen('I hover over {playwrightLocator} and click {playwrightLocator}', \n  async function(hoverElement: Locator, clickElement: Locator) {\n    await hoverElement.hover();\n    await clickElement.click();\n});\n\nThen('I store text from {playwrightLocator} as {string}', \n  async function(element: Locator, variableName: string) {\n    const text = await element.innerText();\n    memory.setValue(variableName, text);\n});\n\n// For WebdriverIO\nWhen('I hover over {wdioLocator} and click {wdioLocator}', \n  async function(hoverElement: () => ChainablePromiseElement<WebdriverIO.Element>, \n               clickElement: () => ChainablePromiseElement<WebdriverIO.Element>) {\n    await hoverElement().moveTo();\n    await clickElement().click();\n});\n\nThen('I store text from {wdioLocator} as {string}', \n  async function(element: () => ChainablePromiseElement<WebdriverIO.Element>, \n               variableName: string) {\n    const text = await element().getText();\n    memory.setValue(variableName, text);\n});\n"})})})]}),"\n",(0,r.jsx)(t.p,{children:"Usage in feature files:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: Custom Steps with Page Objects\n\n  Scenario: Using custom steps with page objects\n    When I hover over 'Header > User Menu' and click 'Header > Profile Link'\n    Then I store text from 'Profile > User Name' as 'username'\n    And I expect '$username' to equal 'John Doe'\n"})}),"\n",(0,r.jsx)(t.h2,{id:"combining-with-memory-variables",children:"Combining with Memory Variables"}),"\n",(0,r.jsx)(t.p,{children:"qavajs page objects can be powerfully combined with the memory module:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: Memory Variables with Page Objects\n\n  Scenario: Using stored values with page objects\n    # Store some values\n    Given I save 'John Doe' as 'username'\n    And I save 'password123' as 'password'\n    \n    # Use them with page objects\n    When I type '$username' to 'Login > Username Field'\n    And I type '$password' to 'Login > Password Field'\n    And I click 'Login > Submit Button'\n    \n    # Use template locators with stored values\n    When I click 'Element By Text ($username)'\n"})}),"\n",(0,r.jsx)(t.h2,{id:"best-practices",children:"Best Practices"}),"\n",(0,r.jsx)(t.h3,{id:"organization",children:"Organization"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Structure by functionality"}),": Organize page objects by feature or page functionality"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Use nested components"}),": Create reusable components for repeated UI patterns"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Use descriptive naming"}),": Name elements clearly to match their purpose"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"selector-strategy",children:"Selector Strategy"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Prefer stable selectors"}),": Use IDs, data attributes, or roles over CSS classes when possible"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Keep selectors simple"}),": Simple selectors are easier to maintain"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Use template locators"})," for dynamic elements that follow a pattern"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Use native locators"})," for complex selection logic"]}),"\n"]}),"\n",(0,r.jsx)(t.h3,{id:"maintainability",children:"Maintainability"}),"\n",(0,r.jsxs)(t.ol,{children:["\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Keep page objects DRY"}),": Avoid duplicating selectors"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Document complex selectors"}),": Add comments to explain complex selection strategies"]}),"\n",(0,r.jsxs)(t.li,{children:[(0,r.jsx)(t.strong,{children:"Use component inheritance"})," for shared behavior"]}),"\n"]}),"\n",(0,r.jsx)(t.h2,{id:"complete-example",children:"Complete Example"}),"\n",(0,r.jsxs)(i.A,{children:[(0,r.jsx)(l.A,{value:"js",label:"JavaScript",default:!0,children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-javascript",children:"// App.js\nconst { locator } = require('@qavajs/steps-playwright/po');\n\nclass App {\n    Header = locator('header').as(HeaderComponent);\n    Footer = locator('footer').as(FooterComponent);\n    \n    // Dynamic page content based on current route\n    Main = locator.native(({ page }) => {\n        const url = page.url();\n        if (url.includes('/products')) return page.locator('main').as(ProductsPage);\n        if (url.includes('/cart')) return page.locator('main').as(CartPage);\n        return page.locator('main').as(HomePage);\n    });\n}\n\nclass HeaderComponent {\n    Logo = locator('.logo');\n    SearchBar = locator('input.search');\n    SearchButton = locator('button.search-submit');\n    NavigationItem = locator.template(text => `nav a:has-text('${text}')`);\n    \n    // Handle complex navigation menu with hover\n    MenuDropdown = locator.template(category => \n        `nav .dropdown:has-text('${category}')`);\n    SubMenuItem = locator.template((category, item) => \n        `nav .dropdown:has-text('${category}') .submenu a:has-text('${item}')`);\n}\n\nclass FooterComponent {\n    Copyright = locator('.copyright');\n    SocialLink = locator.template(platform => `.social-links a[title='${platform}']`);\n    LanguageSelector = locator('select.language');\n}\n\nclass HomePage {\n    HeroImage = locator('.hero-image');\n    FeaturedProducts = locator('.featured-product').as(ProductCard);\n    NewsletterSignup = locator('form.newsletter');\n}\n\nclass ProductsPage {\n    CategoryFilter = locator.template(category => \n        `aside .filter-category:has-text('${category}')`);\n    ProductCards = locator('.product-card').as(ProductCard);\n    SortDropdown = locator('select.sort-by');\n    PaginationNext = locator('.pagination .next');\n}\n\nclass ProductCard {\n    Title = locator('.product-title');\n    Price = locator('.product-price');\n    DiscountBadge = locator('.discount');\n    Rating = locator('.rating');\n    AddToCartButton = locator('button.add-to-cart');\n    QuickView = locator('button.quick-view');\n}\n\nclass CartPage {\n    CartItems = locator('.cart-item').as(CartItem);\n    ContinueShopping = locator('a.continue-shopping');\n    CheckoutButton = locator('button.checkout');\n    CartTotal = locator('.cart-total');\n}\n\nclass CartItem {\n    Title = locator('.item-title');\n    Price = locator('.item-price');\n    Quantity = locator('input.quantity');\n    Remove = locator('button.remove');\n}\n\nmodule.exports = App;\n"})})}),(0,r.jsx)(l.A,{value:"ts",label:"TypeScript",children:(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-typescript",children:"// App.ts\nimport { locator } from '@qavajs/steps-playwright/po';\nimport { Page } from '@playwright/test';\n\nclass App {\n    Header = locator('header').as(HeaderComponent);\n    Footer = locator('footer').as(FooterComponent);\n    \n    // Dynamic page content based on current route\n    Main = locator.native(({ page }: { page: Page }) => {\n        const url = page.url();\n        if (url.includes('/products')) return page.locator('main').as(ProductsPage);\n        if (url.includes('/cart')) return page.locator('main').as(CartPage);\n        return page.locator('main').as(HomePage);\n    });\n}\n\nclass HeaderComponent {\n    Logo = locator('.logo');\n    SearchBar = locator('input.search');\n    SearchButton = locator('button.search-submit');\n    NavigationItem = locator.template((text: string) => `nav a:has-text('${text}')`);\n    \n    // Handle complex navigation menu with hover\n    MenuDropdown = locator.template((category: string) => \n        `nav .dropdown:has-text('${category}')`);\n    SubMenuItem = locator.template((category: string, item: string) => \n        `nav .dropdown:has-text('${category}') .submenu a:has-text('${item}')`);\n}\n\nclass FooterComponent {\n    Copyright = locator('.copyright');\n    SocialLink = locator.template((platform: string) => `.social-links a[title='${platform}']`);\n    LanguageSelector = locator('select.language');\n}\n\nclass HomePage {\n    HeroImage = locator('.hero-image');\n    FeaturedProducts = locator('.featured-product').as(ProductCard);\n    NewsletterSignup = locator('form.newsletter');\n}\n\nclass ProductsPage {\n    CategoryFilter = locator.template((category: string) => \n        `aside .filter-category:has-text('${category}')`);\n    ProductCards = locator('.product-card').as(ProductCard);\n    SortDropdown = locator('select.sort-by');\n    PaginationNext = locator('.pagination .next');\n}\n\nclass ProductCard {\n    Title = locator('.product-title');\n    Price = locator('.product-price');\n    DiscountBadge = locator('.discount');\n    Rating = locator('.rating');\n    AddToCartButton = locator('button.add-to-cart');\n    QuickView = locator('button.quick-view');\n}\n\nclass CartPage {\n    CartItems = locator('.cart-item').as(CartItem);\n    ContinueShopping = locator('a.continue-shopping');\n    CheckoutButton = locator('button.checkout');\n    CartTotal = locator('.cart-total');\n}\n\nclass CartItem {\n    Title = locator('.item-title');\n    Price = locator('.item-price');\n    Quantity = locator('input.quantity');\n    Remove = locator('button.remove');\n}\n\nexport default App;\n"})})})]}),"\n",(0,r.jsx)(t.p,{children:"Example feature file using the complex page object:"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{className:"language-gherkin",children:"Feature: E-commerce Website\n\n  Scenario: Search for and add product to cart\n    Given I open 'https://example-shop.com' url\n    When I type 'wireless headphones' to 'Header > Search Bar'\n    And I click 'Header > Search Button'\n    \n    # Filter results\n    When I click 'Main > Category Filter (Electronics)'\n    And I select 'Price: Low to High' option from 'Main > Sort Dropdown' dropdown\n    \n    # Add second product to cart\n    When I click 'Main > Product Cards > Add To Cart Button (2)'\n    \n    # Go to cart\n    When I click 'Header > Navigation Item (Cart)'\n    Then I expect number of elements in 'Main > Cart Items' collection to equal '1'\n    And I expect text of 'Main > Cart Total' contains '$'\n    \n    # Checkout\n    When I click 'Main > Checkout Button'\n"})})]})}function m(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}},9365:(e,t,n)=>{n.d(t,{A:()=>i});n(6540);var a=n(4164);const r={tabItem:"tabItem_Ymn6"};var o=n(4848);function i({children:e,hidden:t,className:n}){return(0,o.jsx)("div",{role:"tabpanel",className:(0,a.A)(r.tabItem,n),hidden:t,children:e})}},1470:(e,t,n)=>{n.d(t,{A:()=>w});var a=n(6540),r=n(4164),o=n(3104),i=n(6347),l=n(205),s=n(7485),c=n(1682),d=n(679);function p(e){return a.Children.toArray(e).filter((e=>"\n"!==e)).map((e=>{if(!e||(0,a.isValidElement)(e)&&function(e){const{props:t}=e;return!!t&&"object"==typeof t&&"value"in t}(e))return e;throw new Error(`Docusaurus error: Bad <Tabs> child <${"string"==typeof e.type?e.type:e.type.name}>: all children of the <Tabs> component should be <TabItem>, and every <TabItem> should have a unique "value" prop.`)}))?.filter(Boolean)??[]}function u(e){const{values:t,children:n}=e;return(0,a.useMemo)((()=>{const e=t??function(e){return p(e).map((({props:{value:e,label:t,attributes:n,default:a}})=>({value:e,label:t,attributes:n,default:a})))}(n);return function(e){const t=(0,c.XI)(e,((e,t)=>e.value===t.value));if(t.length>0)throw new Error(`Docusaurus error: Duplicate values "${t.map((e=>e.value)).join(", ")}" found in <Tabs>. Every value needs to be unique.`)}(e),e}),[t,n])}function m({value:e,tabValues:t}){return t.some((t=>t.value===e))}function h({queryString:e=!1,groupId:t}){const n=(0,i.W6)(),r=function({queryString:e=!1,groupId:t}){if("string"==typeof e)return e;if(!1===e)return null;if(!0===e&&!t)throw new Error('Docusaurus error: The <Tabs> component groupId prop is required if queryString=true, because this value is used as the search param name. You can also provide an explicit value such as queryString="my-search-param".');return t??null}({queryString:e,groupId:t});return[(0,s.aZ)(r),(0,a.useCallback)((e=>{if(!r)return;const t=new URLSearchParams(n.location.search);t.set(r,e),n.replace({...n.location,search:t.toString()})}),[r,n])]}function g(e){const{defaultValue:t,queryString:n=!1,groupId:r}=e,o=u(e),[i,s]=(0,a.useState)((()=>function({defaultValue:e,tabValues:t}){if(0===t.length)throw new Error("Docusaurus error: the <Tabs> component requires at least one <TabItem> children component");if(e){if(!m({value:e,tabValues:t}))throw new Error(`Docusaurus error: The <Tabs> has a defaultValue "${e}" but none of its children has the corresponding value. Available values are: ${t.map((e=>e.value)).join(", ")}. If you intend to show no default tab, use defaultValue={null} instead.`);return e}const n=t.find((e=>e.default))??t[0];if(!n)throw new Error("Unexpected error: 0 tabValues");return n.value}({defaultValue:t,tabValues:o}))),[c,p]=h({queryString:n,groupId:r}),[g,x]=function({groupId:e}){const t=function(e){return e?`docusaurus.tab.${e}`:null}(e),[n,r]=(0,d.Dv)(t);return[n,(0,a.useCallback)((e=>{t&&r.set(e)}),[t,r])]}({groupId:r}),v=(()=>{const e=c??g;return m({value:e,tabValues:o})?e:null})();(0,l.A)((()=>{v&&s(v)}),[v]);return{selectedValue:i,selectValue:(0,a.useCallback)((e=>{if(!m({value:e,tabValues:o}))throw new Error(`Can't select invalid tab value=${e}`);s(e),p(e),x(e)}),[p,x,o]),tabValues:o}}var x=n(2303);const v={tabList:"tabList__CuJ",tabItem:"tabItem_LNqP"};var b=n(4848);function f({className:e,block:t,selectedValue:n,selectValue:a,tabValues:i}){const l=[],{blockElementScrollPositionUntilNextRender:s}=(0,o.a_)(),c=e=>{const t=e.currentTarget,r=l.indexOf(t),o=i[r].value;o!==n&&(s(t),a(o))},d=e=>{let t=null;switch(e.key){case"Enter":c(e);break;case"ArrowRight":{const n=l.indexOf(e.currentTarget)+1;t=l[n]??l[0];break}case"ArrowLeft":{const n=l.indexOf(e.currentTarget)-1;t=l[n]??l[l.length-1];break}}t?.focus()};return(0,b.jsx)("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,r.A)("tabs",{"tabs--block":t},e),children:i.map((({value:e,label:t,attributes:a})=>(0,b.jsx)("li",{role:"tab",tabIndex:n===e?0:-1,"aria-selected":n===e,ref:e=>{l.push(e)},onKeyDown:d,onClick:c,...a,className:(0,r.A)("tabs__item",v.tabItem,a?.className,{"tabs__item--active":n===e}),children:t??e},e)))})}function j({lazy:e,children:t,selectedValue:n}){const o=(Array.isArray(t)?t:[t]).filter(Boolean);if(e){const e=o.find((e=>e.props.value===n));return e?(0,a.cloneElement)(e,{className:(0,r.A)("margin-top--md",e.props.className)}):null}return(0,b.jsx)("div",{className:"margin-top--md",children:o.map(((e,t)=>(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==n})))})}function y(e){const t=g(e);return(0,b.jsxs)("div",{className:(0,r.A)("tabs-container",v.tabList),children:[(0,b.jsx)(f,{...t,...e}),(0,b.jsx)(j,{...t,...e})]})}function w(e){const t=(0,x.A)();return(0,b.jsx)(y,{...e,children:p(e.children)},String(t))}},8453:(e,t,n)=>{n.d(t,{R:()=>i,x:()=>l});var a=n(6540);const r={},o=a.createContext(r);function i(e){const t=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),a.createElement(o.Provider,{value:t},e.children)}}}]);